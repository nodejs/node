SUBDIRS=record rio quic

LIBS=../libssl

SOURCE[../libssl]=\
        pqueue.c \
        statem/statem_srvr.c statem/statem_clnt.c  s3_lib.c  s3_enc.c \
        statem/statem_lib.c statem/extensions.c statem/extensions_srvr.c \
        statem/extensions_clnt.c statem/extensions_cust.c s3_msg.c \
        methods.c t1_lib.c  t1_enc.c tls13_enc.c \
        d1_lib.c d1_msg.c \
        statem/statem_dtls.c d1_srtp.c \
        ssl_lib.c ssl_cert.c ssl_sess.c \
        ssl_ciph.c ssl_stat.c ssl_rsa.c \
        ssl_asn1.c ssl_txt.c ssl_init.c ssl_conf.c  ssl_mcnf.c \
        bio_ssl.c ssl_err_legacy.c tls_srp.c t1_trce.c ssl_utst.c \
        statem/statem.c \
        ssl_cert_comp.c \
        tls_depr.c

# For shared builds we need to include the libcrypto packet.c and quic_vlint.c
# in libssl as well.
SHARED_SOURCE[../libssl]=\
        ../crypto/packet.c ../crypto/quic_vlint.c ../crypto/time.c

IF[{- !$disabled{'deprecated-3.0'} -}]
  SOURCE[../libssl]=ssl_rsa_legacy.c
ENDIF

IF[{- !$disabled{quic} -}]
  SOURCE[../libssl]=priority_queue.c
  SHARED_SOURCE[../libssl] = ../crypto/hashtable/hashfunc.c
  IF[{- $disabled{siphash} -}]
    SOURCE[../libssl]=../crypto/siphash/siphash.c
  ELSE
    SHARED_SOURCE[../libssl]=../crypto/siphash/siphash.c
  ENDIF
ENDIF
