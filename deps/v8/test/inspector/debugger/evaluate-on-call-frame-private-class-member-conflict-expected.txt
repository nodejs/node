Evaluate conflicting private class member out of class scope in Debugger.evaluateOnCallFrame()

class Klass {
  #name = "string";
}
class ClassWithField extends Klass {
  #name = "child";
}
class ClassWithMethod extends Klass {
  #name() {}
}
class ClassWithAccessor extends Klass {
  get #name() {}
  set #name(val) {}
}
class StaticClass extends Klass {
  static #name = "child";
}
debugger;

Running test: evaluatePrivateMembers
Debugger.evaluateOnCallFrame: `(new ClassWithField).#name`
{
    className : Error
    description : Error: Operation is ambiguous because there are more than one private name'#name' on the object     at eval (eval at <anonymous> (:18:1), <anonymous>:1:2)     at <anonymous>:18:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(new ClassWithMethod).#name`
{
    className : Error
    description : Error: Operation is ambiguous because there are more than one private name'#name' on the object     at eval (eval at <anonymous> (:18:1), <anonymous>:1:2)     at <anonymous>:18:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(new ClassWithAccessor).#name`
{
    className : Error
    description : Error: Operation is ambiguous because there are more than one private name'#name' on the object     at eval (eval at <anonymous> (:18:1), <anonymous>:1:2)     at <anonymous>:18:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `StaticClass.#name`
{
    type : string
    value : child
}
Debugger.evaluateOnCallFrame: `(new StaticClass).#name`
{
    type : string
    value : string
}
