Test that new.target can be inspected in Debugger.evaluateOnCallFrame

Running test: withExplicitUsage
{
    className : Function
    description : function C() {   const fn = new.target;   debugger; }
    objectId : <objectId>
    type : function
}

Running test: withDirectEval
{
    className : Function
    description : function D() {   const fn = eval('new.target');   debugger; }
    objectId : <objectId>
    type : function
}

Running test: withoutExplicitUsage
{
    className : ReferenceError
    description : ReferenceError: .new.target is not defined     at eval (eval at E (:1:1), <anonymous>:1:1)     at new E (<anonymous>:13:3)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}

Running test: withInheritence
{
    className : Function
    description : class B extends A {}
    objectId : <objectId>
    type : function
}

Running test: withContextAllocatedNewTarget
{
    className : Function
    description : function F() {   () => new.target;  // context-allocate.   debugger; }
    objectId : <objectId>
    type : function
}
