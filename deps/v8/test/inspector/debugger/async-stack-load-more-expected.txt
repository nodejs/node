Tests super long async stacks.

Running test: test
(anonymous) (expr.js:0:26)
callWithAsyncStack (utils.js:3:4)
call1 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call2 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call3 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call4 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call5 (wrapper.js:0:20)
(fetch parent..)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call6 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call7 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call8 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call9 (wrapper.js:0:20)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call10 (wrapper.js:0:21)
(fetch parent..)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call11 (wrapper.js:0:21)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
call12 (wrapper.js:0:21)
--Promise.then--
callWithAsyncStack (utils.js:7:20)
(anonymous) (expr.js:0:0)
