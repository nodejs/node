Evaluate getting private member from Smi

Running test: evaluatePrivateMember
Debugger.evaluateOnCallFrame: `(1).#test = 1`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from 1     at eval (eval at <anonymous> (:1:1), <anonymous>:1:11)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(1).#test`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from 1     at eval (eval at <anonymous> (:1:1), <anonymous>:1:1)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(null).#test = 1`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from null     at eval (eval at <anonymous> (:1:1), <anonymous>:1:14)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(null).#test`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from null     at eval (eval at <anonymous> (:1:1), <anonymous>:1:1)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(undefined).#test = 1`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from undefined     at eval (eval at <anonymous> (:1:1), <anonymous>:1:19)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(undefined).#test`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from undefined     at eval (eval at <anonymous> (:1:1), <anonymous>:1:1)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(true).#test = 1`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from true     at eval (eval at <anonymous> (:1:1), <anonymous>:1:14)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `(true).#test`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from true     at eval (eval at <anonymous> (:1:1), <anonymous>:1:1)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `("str").#test = 1`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from str     at eval (eval at <anonymous> (:1:1), <anonymous>:1:15)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `("str").#test`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from str     at eval (eval at <anonymous> (:1:1), <anonymous>:1:1)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `Symbol("str").#test = 1`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from Symbol(str)     at eval (eval at <anonymous> (:1:1), <anonymous>:1:21)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
Debugger.evaluateOnCallFrame: `Symbol("str").#test`
{
    className : TypeError
    description : TypeError: Cannot access private name #test from Symbol(str)     at eval (eval at <anonymous> (:1:1), <anonymous>:1:1)     at <anonymous>:1:1
    objectId : <objectId>
    subtype : error
    type : object
}
