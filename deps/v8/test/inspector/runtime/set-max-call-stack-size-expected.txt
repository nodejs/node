Checks Runtime.setMaxCallStackSizeToCapture.

Running test: testBeforeEnable
{
    code : -32000
    message : Runtime agent is not enabled
}

Running test: testNegativeSize
{
    code : -32000
    message : maxCallStackSizeToCapture should be non-negative
}

Running test: testConsoleLogBeforeEnable
{
    args : [
        [0] : {
            type : string
            value : Log message.
        }
    ]
    executionContextId : <executionContextId>
    stackTrace : {
        callFrames : [
            [0] : {
                columnNumber : 10
                functionName : testConsoleLog
                lineNumber : 2
                scriptId : <scriptId>
                url : test.js
            }
        ]
    }
    timestamp : <timestamp>
    type : log
}

Running test: testConsoleTrace
Test with max size 0.
{
    args : [
        [0] : {
            type : string
            value : Nested call.
        }
    ]
    executionContextId : <executionContextId>
    stackTrace : {
        callFrames : [
            [0] : {
                columnNumber : 12
                functionName : bar
                lineNumber : 7
                scriptId : <scriptId>
                url : test.js
            }
            [1] : {
                columnNumber : 4
                functionName : foo
                lineNumber : 12
                scriptId : <scriptId>
                url : test.js
            }
        ]
    }
    timestamp : <timestamp>
    type : trace
}
Test with max size 1.
{
    args : [
        [0] : {
            type : string
            value : Nested call.
        }
    ]
    executionContextId : <executionContextId>
    stackTrace : {
        callFrames : [
            [0] : {
                columnNumber : 12
                functionName : bar
                lineNumber : 7
                scriptId : <scriptId>
                url : test.js
            }
            [1] : {
                columnNumber : 4
                functionName : foo
                lineNumber : 12
                scriptId : <scriptId>
                url : test.js
            }
        ]
        parent : {
            callFrames : [
                [0] : {
                    columnNumber : 4
                    functionName : executor
                    lineNumber : 16
                    scriptId : <scriptId>
                    url : test.js
                }
            ]
            description : setTimeout
        }
    }
    timestamp : <timestamp>
    type : trace
}
Test with max size 2.
{
    args : [
        [0] : {
            type : string
            value : Nested call.
        }
    ]
    executionContextId : <executionContextId>
    stackTrace : {
        callFrames : [
            [0] : {
                columnNumber : 12
                functionName : bar
                lineNumber : 7
                scriptId : <scriptId>
                url : test.js
            }
            [1] : {
                columnNumber : 4
                functionName : foo
                lineNumber : 12
                scriptId : <scriptId>
                url : test.js
            }
        ]
        parent : {
            callFrames : [
                [0] : {
                    columnNumber : 4
                    functionName : executor
                    lineNumber : 16
                    scriptId : <scriptId>
                    url : test.js
                }
                [1] : {
                    columnNumber : 9
                    functionName : testConsoleTrace
                    lineNumber : 15
                    scriptId : <scriptId>
                    url : test.js
                }
            ]
            description : setTimeout
        }
    }
    timestamp : <timestamp>
    type : trace
}

Running test: testException
Test with max size 0.
{
    columnNumber : 4
    exception : {
        className : Error
        description : Error     at bar (test.js:23:11)     at foo (test.js:27:5)     at testThrow (test.js:30:3)     at <anonymous>:1:1
        objectId : <objectId>
        subtype : error
        type : object
    }
    exceptionId : <exceptionId>
    lineNumber : 22
    scriptId : <scriptId>
    text : Uncaught
}
Test with max size 1.
{
    columnNumber : 4
    exception : {
        className : Error
        description : Error     at bar (test.js:23:11)     at foo (test.js:27:5)     at testThrow (test.js:30:3)     at <anonymous>:1:1
        objectId : <objectId>
        subtype : error
        type : object
    }
    exceptionId : <exceptionId>
    lineNumber : 22
    scriptId : <scriptId>
    stackTrace : {
        callFrames : [
            [0] : {
                columnNumber : 10
                functionName : bar
                lineNumber : 22
                scriptId : <scriptId>
                url : test.js
            }
        ]
    }
    text : Uncaught
}
Test with max size 2.
{
    columnNumber : 4
    exception : {
        className : Error
        description : Error     at bar (test.js:23:11)     at foo (test.js:27:5)     at testThrow (test.js:30:3)     at <anonymous>:1:1
        objectId : <objectId>
        subtype : error
        type : object
    }
    exceptionId : <exceptionId>
    lineNumber : 22
    scriptId : <scriptId>
    stackTrace : {
        callFrames : [
            [0] : {
                columnNumber : 10
                functionName : bar
                lineNumber : 22
                scriptId : <scriptId>
                url : test.js
            }
            [1] : {
                columnNumber : 4
                functionName : foo
                lineNumber : 26
                scriptId : <scriptId>
                url : test.js
            }
        ]
    }
    text : Uncaught
}
