#
# Autogenerated by generate-bytecode-expectations.
#

---
wrap: no
test function name: f

---
snippet: "
  function f() { return arguments; }
  f();
"
frame size: 1
parameter count: 1
bytecode array length: 3
bytecodes: [
  /*   10 E> */ B(CreateMappedArguments),
                B(Star0),
  /*   32 S> */ B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f() { return arguments[0]; }
  f();
"
frame size: 1
parameter count: 1
bytecode array length: 7
bytecodes: [
  /*   10 E> */ B(CreateMappedArguments),
                B(Star0),
  /*   15 S> */ B(LdaZero),
  /*   31 E> */ B(GetKeyedProperty), R(0), U8(0),
  /*   35 S> */ B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f() { 'use strict'; return arguments; }
  f();
"
frame size: 1
parameter count: 1
bytecode array length: 3
bytecodes: [
  /*   10 E> */ B(CreateUnmappedArguments),
                B(Star0),
  /*   46 S> */ B(Return),
]
constant pool: [
]
handlers: [
]

---
snippet: "
  function f(a) { return arguments[0]; }
  f();
"
frame size: 2
parameter count: 2
bytecode array length: 16
bytecodes: [
  /*   10 E> */ B(CreateFunctionContext), U8(0), U8(1),
                B(PushContext), R(1),
                B(Ldar), R(arg0),
                B(StaCurrentContextSlotNoCell), U8(2),
                B(CreateMappedArguments),
                B(Star0),
  /*   16 S> */ B(LdaZero),
  /*   32 E> */ B(GetKeyedProperty), R(0), U8(0),
  /*   36 S> */ B(Return),
]
constant pool: [
  SCOPE_INFO_TYPE,
]
handlers: [
]

---
snippet: "
  function f(a, b, c) { return arguments; }
  f();
"
frame size: 2
parameter count: 4
bytecode array length: 20
bytecodes: [
  /*   10 E> */ B(CreateFunctionContext), U8(0), U8(3),
                B(PushContext), R(1),
                B(Ldar), R(arg0),
                B(StaCurrentContextSlotNoCell), U8(4),
                B(Ldar), R(arg1),
                B(StaCurrentContextSlotNoCell), U8(3),
                B(Ldar), R(arg2),
                B(StaCurrentContextSlotNoCell), U8(2),
                B(CreateMappedArguments),
                B(Star0),
  /*   39 S> */ B(Return),
]
constant pool: [
  SCOPE_INFO_TYPE,
]
handlers: [
]

---
snippet: "
  function f(a, b, c) { 'use strict'; return arguments; }
  f();
"
frame size: 1
parameter count: 4
bytecode array length: 3
bytecodes: [
  /*   10 E> */ B(CreateUnmappedArguments),
                B(Star0),
  /*   53 S> */ B(Return),
]
constant pool: [
]
handlers: [
]

