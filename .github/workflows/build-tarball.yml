name: Build from tarball

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - .mailmap
      - '**.md'
      - AUTHORS
      - doc/**
      - .github/**
      - '!.github/workflows/build-tarball.yml'
  push:
    branches:
      - main
      - v[0-9]+.x-staging
      - v[0-9]+.x
    paths-ignore:
      - .mailmap
      - '**.md'
      - AUTHORS
      - doc/**
      - .github/**
      - '!.github/workflows/build-tarball.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.12'
  FLAKY_TESTS: keep_retrying
  CLANG_VERSION: '19'

permissions:
  contents: read

jobs:
  build-tarball:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Environment Information
        run: npx envinfo
      - name: Make tarball
        run: |
          export DISTTYPE=nightly
          export DATESTRING=$(date "+%Y-%m-%d")
          export COMMIT=$(git rev-parse --short=10 "$GITHUB_SHA")
          ./configure && make tar -j4 SKIP_XZ=1
      - name: Upload tarball artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: tarballs
          path: '*.tar.gz'
          compression-level: 0
  test-tarball-linux:
    needs: build-tarball
    runs-on: ubuntu-24.04
    env:
      CC: sccache clang-19
      CXX: sccache clang++-19
      SCCACHE_GHA_ENABLED: 'true'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
          sparse-checkout: .github/actions/install-clang
          sparse-checkout-cone-mode: false
      - name: Install Clang ${{ env.CLANG_VERSION }}
        uses: ./.github/actions/install-clang
        with:
          clang-version: ${{ env.CLANG_VERSION }}
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up sccache
        uses: Mozilla-Actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad  # v0.0.9
        with:
          version: v0.10.0
      - name: Environment Information
        run: npx envinfo
      - name: Download tarball
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: tarballs
          path: tarballs
      - name: Extract tarball
        run: |
          tar xzf tarballs/*.tar.gz -C "$RUNNER_TEMP"
          echo "TAR_DIR=$RUNNER_TEMP/$(basename tarballs/*.tar.gz .tar.gz)" >> "$GITHUB_ENV"
      - name: Build
        run: make -C "$TAR_DIR" build-ci -j4 V=1
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
          sparse-checkout: |
            tools/eslint
            tools/eslint-rules
      - name: Move directories needed for testing
        run: |
          mv tools/eslint "$TAR_DIR/tools"
          mv tools/eslint-rules "$TAR_DIR/tools"
      - name: Test
        run: make -C "$TAR_DIR" run-ci -j4 V=1 TEST_CI_ARGS="-p dots --measure-flakiness 9"
